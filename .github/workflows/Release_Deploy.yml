name: Release_Deploy

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/**'

env:
  namespace: default
  cluster: my-cluster
  
jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Canceling a running workflow
        uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
  time:
    runs-on: ubuntu-latest
    outputs:
      now: ${{ steps.time.outputs.now }}
    steps:
      - name: Get time
        id: time
        run: echo ::set-output name=now::$( date "+%Y%m%d-%H%M%S" )

  release_deploy:
    runs-on: ubuntu-latest
    needs: time
    outputs:
      image: ${{ steps.ecr.outputs.image }}

    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: JDK setup
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/dependency-check-data
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
    
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.ECR_AWS_REGION }}

      - name: ECR login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Gradle execution Register with Docker Build and ECR with jib
        id: ecr
        run: |
          aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 910121505252.dkr.ecr.ap-northeast-1.amazonaws.com
          if [ -z "$TAG_PREFIX" ]
          then
            TAG_PREFIX=$( echo ${GITHUB_REF} | sed -e 's/^refs\/tags\///g' )
          fi
          TAG_NAME=${TAG_PREFIX}_${NOW}
          ./gradlew jib -s --profile \
            --image=${{ secrets.ECR_AWS_ENDPOINT }}:rel-v_${NOW}
          echo rel-v
          echo ::set-output name=image::rel-v_${NOW}
        env:
          NOW: ${{ needs.time.outputs.now }}
          
      - name: ECR image name
        run: echo ${{ steps.ecr.outputs.image }}
          
     #Settings for each deployment environment
      - name: AWS Credentials(dev)
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ secrets.ECR_AWS_REGION }}

      - name: Deploy Helm
        uses: deliverybot/helm@v1
        with:
          release: '${{ steps.ecr.outputs.image }}'
          namespace: 'default'
          cluster-name: 'my-cluster'
          values: |
            app.image: ${{ secrets.ECR_AWS_ENDPOINT }}:${{ steps.ecr.outputs.image }}
          value-files: 'platform/helm/values.yaml'
          chart: 'platform/helm'